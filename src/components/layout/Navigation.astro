---
import Social from "../ui/Social.astro";
import { getCollection } from "astro:content";

const [staticData] = await getCollection("staticData");
const { github, githubIconName, linkedin, linkedinIconName } = staticData.data;

const { items = [] }: { items: (keyof typeof menu)[] } = Astro.props as {
  items: (keyof typeof menu)[];
};

// Set the base path for GitHub Pages
const BASE_PATH = "/React_Portfolio";

// Menu without blog
const menu = {
  about: { name: "About Me", path: `${BASE_PATH}/about-me` },
  home: { name: "Home", path: `${BASE_PATH}/#home` },
  experience: { name: "Experience", path: `${BASE_PATH}/#experience` },
  projects: { name: "Projects", path: `${BASE_PATH}/#projects` },
};

// Common base classes
const baseClasses = {
  nav: "nav-links flex w-full justify-center gap-6 max-md:gap-3 max-md:py-6",
  link: "px-2 py-2 transition-all hover:text-mint-300 max-md:mx-auto max-md:w-full max-md:px-6 max-md:py-2",
  socialContainer: "flex items-center justify-center gap-5 md:hidden",
} as const;
---

<script>
document.addEventListener("DOMContentLoaded", () => {
  const isHome = window.location.pathname.endsWith("/React_Portfolio/");

  const linkClasses = {
    active: [
      "text-mint-500",
      "dark:text-mint-400",
      "font-bold",
      "[text-shadow:1px_1px_11px_rgba(208,251,229,0.7)]",
    ],
    inactive: ["dark:text-zinc-300", "text-blacktext"],
  };

  function toggleLinkClasses(link, isActive) {
    if (isActive) {
      link.classList.add(...linkClasses.active);
      link.classList.remove(...linkClasses.inactive);
      link.setAttribute("aria-current", "page");
    } else {
      link.classList.remove(...linkClasses.active);
      link.classList.add(...linkClasses.inactive);
      link.removeAttribute("aria-current");
    }
  }

  function updateActiveLink() {
    const currentPath = window.location.pathname + window.location.hash;
    document.querySelectorAll("nav a").forEach((link) => {
      const path = link.getAttribute("data-path");
      toggleLinkClasses(link, path === currentPath);
    });
  }

  function setupScrollSpy() {
    if (!isHome) return;

    const sections = document.querySelectorAll("section[id]");
    const navLinks = document.querySelectorAll("nav a");

    const observerOptions = {
      root: null,
      rootMargin: "-50% 0px",
      threshold: 0,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.getAttribute("id");
          if (sectionId) {
            navLinks.forEach((link) => {
              const path = link.getAttribute("data-path");
              toggleLinkClasses(link, path === `/React_Portfolio/#${sectionId}`);
            });
          }
        }
      });
    }, observerOptions);

    sections.forEach((section) => observer.observe(section));
  }

  updateActiveLink();
  setupScrollSpy();
  window.addEventListener("hashchange", updateActiveLink);
});
</script>

<nav class={baseClasses.nav} role="navigation" aria-label="Main Navigation">
  {items.map((key) => {
    const item = menu[key as keyof typeof menu];
    if (!item) return null;

    return (
      <a
        href={item.path}
        class={baseClasses.link}
        data-path={item.path}
        aria-label={item.name}
        aria-current={item.path === Astro.url.pathname ? "page" : undefined}
      >
        {item.name}
      </a>
    );
  })}

  <div class={baseClasses.socialContainer} role="group" aria-label="Social Media Links">
    <Social link={github} iconName={githubIconName} />
    <Social link={linkedin} iconName={linkedinIconName} />
  </div>
</nav>
